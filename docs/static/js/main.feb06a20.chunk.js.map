{"version":3,"sources":["common/GlobalVariable.js","common/Character.jsx","pages/Characters.jsx","pages/Series.jsx","pages/Home.jsx","pages/Quotes.jsx","components/error/404.jsx","routing/Routing.jsx","components/navbar/MenuNavbar.jsx","App.js","reportWebVitals.js","index.js"],"names":["API_BASE","API_EPISODES","concat","API_CHARACTER","API_QUOTES","Character","user","this","props","react_default","a","createElement","Card","border","className","style","width","Img","height","alt","variant","loading","src","img","Header","Title","char_id","name","charAt","substring","ListGroup","ListGroupItem","nickname","birthday","portrayed","occupation","map","o","key","Component","Characters","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","loadData","users","_this2","fetch","then","response","json","episodeResponse","setState","fetchCharacters","characters","common_Character","Row","md","Col","Spinner","animation","Series","episodes","Table","striped","bordered","hover","ep","episode_id","season","episode","title","series","air_date","Home","Container","fluid","Quotes","quotes","qisodeResponse","q","quote_id","author","quote","Error404","Routing","react_router","path","element","pages_Home","pages_Series","pages_Characters","pages_Quotes","_404","MenuNavbar","Navbar","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","react_router_dom","to","App","navbar_MenuNavbar","routing_Routing","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.feb06a20.chunk.js","sourcesContent":["export const API_BASE = \"https://www.breakingbadapi.com/api\";\r\nexport const API_EPISODES = API_BASE.concat(\"/episodes\");\r\nexport const API_CHARACTER = API_BASE.concat(\"/characters\");\r\nexport const API_QUOTES = API_BASE.concat(\"/quotes\");\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nclass Character extends Component {\r\n  render() {\r\n    let user = this.props.user;\r\n    return (\r\n      <Card border=\"success\" className=\"m-1\" style={{ width: \"20rem\" }}>\r\n        <Card.Img\r\n          width={500}\r\n          height={500}\r\n          alt=\"500x500\"\r\n          variant=\"top\"\r\n          loading=\"lazy\"\r\n          src={user.img}\r\n        />\r\n        <Card.Header>\r\n          <Card.Title>\r\n            {user.char_id} -{\" \"}\r\n            <span className=\"firstLetter\">{user.name.charAt(0)}</span>\r\n            {user.name.substring(1)}\r\n          </Card.Title>\r\n        </Card.Header>\r\n        <ListGroup className=\"list-group-flush\">\r\n          <ListGroupItem>Nickname: {user.nickname}</ListGroupItem>\r\n          <ListGroupItem>Birthday: {user.birthday}</ListGroupItem>\r\n          <ListGroupItem>Actor: {user.portrayed}</ListGroupItem>\r\n          <ListGroupItem>\r\n            Occupation:{\" \"}\r\n            {user.occupation.map((o) => (\r\n              <li key={o}>{o}</li>\r\n            ))}\r\n          </ListGroupItem>\r\n        </ListGroup>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Character;\r\n","import React, { Component } from \"react\";\r\nimport { Spinner, Row, Col } from \"react-bootstrap\";\r\nimport { API_CHARACTER } from \"../common/GlobalVariable\";\r\nimport Character from \"../common/Character\";\r\n\r\nclass Characters extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadData: false,\r\n      users: [],\r\n    };\r\n  }\r\n\r\n  fetchCharacters() {\r\n    fetch(API_CHARACTER)\r\n      .then((response) => response.json())\r\n      .then((episodeResponse) => {\r\n        this.setState({ users: episodeResponse, loadData: true });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.loadData) {\r\n      this.fetchCharacters();\r\n    }\r\n  }\r\n  render() {\r\n    if (this.state.loadData) {\r\n      let users = this.state.users;\r\n      let characters = users.map((user) => (\r\n        <Character user={user} key={user.char_id} />\r\n      ));\r\n      return (\r\n        <Row md={12} className=\"justify-content-md-center\">\r\n          {characters}\r\n        </Row>\r\n      );\r\n    }\r\n    return (\r\n      <Row className=\"mt-4 justify-content-md-center\">\r\n        <Col md=\"auto\">\r\n          <Spinner animation=\"grow\" variant=\"success\" />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Characters;\r\n","import React, { Component } from \"react\";\r\nimport { API_EPISODES } from \"../common/GlobalVariable\";\r\nimport { Table, Spinner, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Series extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadData: false,\r\n      episodes: [],\r\n    };\r\n  }\r\n\r\n  fetchCharacters() {\r\n    fetch(API_EPISODES)\r\n      .then((response) => response.json())\r\n      .then((episodeResponse) => {\r\n        this.setState({ episodes: episodeResponse, loadData: true });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.loadData) {\r\n      this.fetchCharacters();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loadData) {\r\n      let episodes = this.state.episodes;\r\n      return (\r\n        <Col md={12}>\r\n          <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>Season</th>\r\n                <th>Episode</th>\r\n                <th>title</th>\r\n                <th>series</th>\r\n                <th>Date</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {episodes.map((ep) => (\r\n                <tr key={ep.episode_id}>\r\n                  <td>{ep.season}</td>\r\n                  <td>{ep.episode}</td>\r\n                  <td>{ep.title}</td>\r\n                  <td>{ep.series}</td>\r\n                  <td>{ep.air_date}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      );\r\n    }\r\n    return (\r\n      <Row className=\"mt-4 justify-content-md-center\">\r\n        <Col md=\"auto\">\r\n          <Spinner animation=\"grow\" variant=\"success\" />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Series;\r\n","import React, { Component } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <div className=\"BreakingBad\">\r\n          <div className=\"logo\">\r\n            <p>\r\n              <span className=\"element\">\r\n                Br<span className=\"number\">35</span>\r\n              </span>\r\n              eaking\r\n            </p>\r\n            <p>\r\n              <span className=\"element\">\r\n                Ba<span className=\"number\">56</span>\r\n              </span>\r\n              d\r\n            </p>\r\n          </div>\r\n          <footer>\r\n            <p>by Aymen</p>\r\n          </footer>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { API_QUOTES } from \"../common/GlobalVariable\";\r\nimport { Table, Spinner, Row, Col } from \"react-bootstrap\";\r\n\r\nclass Quotes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loadData: false,\r\n      quotes: [],\r\n    };\r\n  }\r\n\r\n  fetchCharacters() {\r\n    fetch(API_QUOTES)\r\n      .then((response) => response.json())\r\n      .then((qisodeResponse) => {\r\n        this.setState({ quotes: qisodeResponse, loadData: true });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.state.loadData) {\r\n      this.fetchCharacters();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loadData) {\r\n      let quotes = this.state.quotes;\r\n      return (\r\n        <Col md={12}>\r\n          <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n              <tr>\r\n                <th>author</th>\r\n                <th>quote</th>\r\n                <th>series</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {quotes.map((q) => (\r\n                <tr key={q.quote_id}>\r\n                  <td>{q.author}</td>\r\n                  <td>{q.quote}</td>\r\n                  <td>{q.series}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </Col>\r\n      );\r\n    }\r\n    return (\r\n      <Row className=\"mt-4 justify-content-md-center\">\r\n        <Col md=\"auto\">\r\n          <Spinner animation=\"grow\" variant=\"success\" />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Quotes;\r\n","import React from \"react\";\r\n\r\nconst Error404 = () => {\r\n  return <h1>404</h1>;\r\n};\r\nexport default Error404;\r\n","import React, { Component } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\n\r\nimport Characters from \"../pages/Characters\";\r\nimport Series from \"../pages/Series\";\r\nimport Home from \"../pages/Home\";\r\nimport Quotes from \"../pages/Quotes\";\r\nimport Error404 from \"../components/error/404\";\r\n\r\nclass Routing extends Component {\r\n  render() {\r\n    return (\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />} />\r\n        <Route path=\"series\" element={<Series />} />\r\n        <Route path=\"characters\" element={<Characters />} />\r\n        <Route path=\"quotes\" element={<Quotes />} />\r\n        <Route path=\"*\" element={<Error404 />} />\r\n      </Routes>\r\n    );\r\n  }\r\n}\r\nexport default Routing;\r\n","import React, { Component } from \"react\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\nimport { Navbar, Container, Nav } from \"react-bootstrap\";\r\n\r\nclass MenuNavbar extends Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"dark\" variant=\"dark\" className=\"mb-3\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Breaking Bad</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Link className=\"nav-link\" to=\"/\">\r\n                Home\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/series\">\r\n                Series\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/characters\">\r\n                Characters\r\n              </Link>\r\n              <Link className=\"nav-link\" to=\"/quotes\">\r\n                Quotes\r\n              </Link>\r\n            </Nav>\r\n            <Outlet />\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuNavbar;\r\n","import React from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Routing from \"./routing/Routing\";\r\nimport MenuNavbar from \"./components/navbar/MenuNavbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <MenuNavbar />\r\n      <Container>\r\n        <Routing />\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}